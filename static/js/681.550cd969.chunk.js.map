{"version":3,"file":"static/js/681.550cd969.chunk.js","mappings":"0MAyCA,UAnCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,IARAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAYH,GACTI,MAAK,SAAAC,GAAQ,OAAIR,EAAWQ,EAASC,KAAKC,QAA7B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQb,GAAa,GACzB,GAAE,CAACH,EAASI,IAERJ,EAGL,OACE,2BACGE,IAAa,SAAC,IAAD,IACbF,EAAQiB,OAAS,GAChB,wBACGjB,EAAQkB,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,qCAAaD,MACb,6BAAKC,OAFEF,EAKZ,MAGH,4CAIP,C,2CC1BD,IAbgB,WACd,OACE,SAAC,KAAD,CACEG,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,aAAa,gBACbC,SAAS,GAGd,C,sKCXKC,EAAG,mCAEIC,EAAe,WAI1B,OAHiBC,EAAAA,EAAAA,IAAA,gEAC0CF,GAG5D,EACYG,EAAmB,SAAAC,GAI9B,OAHiBF,EAAAA,EAAAA,IAAA,4DACsCF,EADtC,yBAC0DI,GAG5E,EACYC,EAAW,SAAAf,GAItB,OAHiBY,EAAAA,EAAAA,IAAA,6CACuBZ,EADvB,oBACqCU,EADrC,mBAIlB,EACYM,EAAa,SAAAhB,GAIxB,OAHiBY,EAAAA,EAAAA,IAAA,6CACuBZ,EADvB,4BAC6CU,EAD7C,mBAIlB,EACYtB,EAAc,SAAAY,GAGzB,OAFiBY,EAAAA,EAAAA,IAAA,+CACkBZ,EADlB,4BACwCU,EADxC,0BAGlB,C","sources":["components/Reviews.jsx","components/Spinner.jsx","services/api.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { reviewsFilm } from '../services/api';\nimport Spinner from '../components/Spinner';\n\nconst Rewiews = () => {\n  const [reviews, setReviews] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  useEffect(() => {\n    setIsLoading(true);\n    reviewsFilm(movieId)\n      .then(response => setReviews(response.data.results))\n      .catch(error => console.log(error))\n      .finally(setIsLoading(false));\n  }, [reviews, movieId]);\n\n  if (!reviews) {\n    return;\n  }\n  return (\n    <div>\n      {isLoading && <Spinner />}\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h2>Author: {author}</h2>\n                <p> {content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        \"We don't have any rewiws for this movie\"\n      )}\n    </div>\n  );\n};\nexport default Rewiews;\n","import { Audio } from 'react-loader-spinner';\nconst Spinner = () => {\n  return (\n    <Audio\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      ariaLabel=\"audio-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"wrapper-class\"\n      visible={true}\n    />\n  );\n};\nexport default Spinner;\n","import axios from 'axios';\n\nconst KEY = `6f3a72a470b06bab99f8d69f54b4e2d3`;\n\nexport const trendingList = () => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  return response;\n};\nexport const searchNameMovies = query => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&page=1&query=${query}`\n  );\n  return response;\n};\nexport const infoFilm = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\nexport const infoActors = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\nexport const reviewsFilm = id => {\n  const response = axios.get(`\nhttps://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n  return response;\n};\n"],"names":["useState","reviews","setReviews","isLoading","setIsLoading","movieId","useParams","useEffect","reviewsFilm","then","response","data","results","catch","error","console","log","finally","length","map","id","author","content","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","KEY","trendingList","axios","searchNameMovies","query","infoFilm","infoActors"],"sourceRoot":""}