{"version":3,"file":"static/js/415.5659177d.chunk.js","mappings":"6LA2BA,IAvBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gLAWPE,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGL,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACP,EAAD,CAASQ,GAAE,kBAAaF,GAAeG,MAAO,CAAEC,KAAMP,GAAtD,SACGI,GADgCD,EADzB,KAOjB,C,2CCZD,IAbgB,WACd,OACE,SAAC,KAAD,CACEK,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,aAAa,gBACbC,SAAS,GAGd,C,0FCYD,UApBa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeoB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAUA,OATAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAUM,EAASC,KAAKC,QACzB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQX,GAAa,GACzB,GAAE,KAED,6BACE,2CACCD,IAAa,SAAC,IAAD,IACbrB,IAAU,SAAC,IAAD,CAAWA,OAAQA,MAGnC,C,sKCtBKkC,EAAG,mCAEIV,EAAe,WAI1B,OAHiBW,EAAAA,EAAAA,IAAA,gEAC0CD,GAG5D,EACYE,EAAmB,SAAAC,GAI9B,OAHiBF,EAAAA,EAAAA,IAAA,4DACsCD,EADtC,yBAC0DG,GAG5E,EACYC,EAAW,SAAA/B,GAItB,OAHiB4B,EAAAA,EAAAA,IAAA,6CACuB5B,EADvB,oBACqC2B,EADrC,mBAIlB,EACYK,EAAa,SAAAhC,GAIxB,OAHiB4B,EAAAA,EAAAA,IAAA,6CACuB5B,EADvB,4BAC6C2B,EAD7C,mBAIlB,EACYM,EAAc,SAAAjC,GAGzB,OAFiB4B,EAAAA,EAAAA,IAAA,+CACkB5B,EADlB,4BACwC2B,EADxC,0BAGlB,C,sBChCc,SAASO,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHK,MAAOH,OAAOC,OAAOH,MAG3B,C","sources":["components/MovieList.jsx","components/Spinner.jsx","pages/Home.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const NavItem = styled(NavLink)`\n    display: flex;\n    flex-direction: column;\n    color: black;\n    text-decoration: none;\n    :hover,\n    :focus {\n      color: blue;\n    }\n  `;\n\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <NavItem to={`/movies/${id}`} key={id} state={{ from: location }}>\n          {title}\n        </NavItem>\n      ))}\n    </ul>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};","import { Audio } from 'react-loader-spinner';\nconst Spinner = () => {\n  return (\n    <Audio\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      ariaLabel=\"audio-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"wrapper-class\"\n      visible={true}\n    />\n  );\n};\nexport default Spinner;\n","import { useEffect, useState } from 'react';\nimport { trendingList } from '../services/api';\nimport MovieList from '../components/MovieList';\nimport Spinner from '../components/Spinner';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    trendingList()\n      .then(response => {\n        setMovies(response.data.results);\n      })\n      .catch(error => console.log(error))\n      .finally(setIsLoading(false));\n  }, []);\n  return (\n    <main>\n      <h1>Trending today</h1>\n      {isLoading && <Spinner />}\n      {movies && <MovieList movies={movies} />}\n    </main>\n  );\n};\nexport default Home;\n","import axios from 'axios';\n\nconst KEY = `6f3a72a470b06bab99f8d69f54b4e2d3`;\n\nexport const trendingList = () => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  return response;\n};\nexport const searchNameMovies = query => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&page=1&query=${query}`\n  );\n  return response;\n};\nexport const infoFilm = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\nexport const infoActors = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\nexport const reviewsFilm = id => {\n  const response = axios.get(`\nhttps://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n  return response;\n};\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["movies","NavItem","styled","NavLink","location","useLocation","map","id","title","to","state","from","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","useState","setMovies","isLoading","setIsLoading","useEffect","trendingList","then","response","data","results","catch","error","console","log","finally","KEY","axios","searchNameMovies","query","infoFilm","infoActors","reviewsFilm","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}