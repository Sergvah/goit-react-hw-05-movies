{"version":3,"file":"static/js/583.b5eb9621.chunk.js","mappings":"6LA2BA,IAvBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,gLAWPE,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGL,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACP,EAAD,CAASQ,GAAE,kBAAaF,GAAeG,MAAO,CAAEC,KAAMP,GAAtD,SACGI,GADgCD,EADzB,KAOjB,C,2CCZD,IAbgB,WACd,OACE,SAAC,KAAD,CACEK,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,aAAa,gBACbC,SAAS,GAGd,C,0ICQD,EAlBoB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAUA,OACE,kBAAMH,SAPa,SAAAI,GACnBA,EAAMC,iBACNF,EAAW,IACXH,EAASE,EACV,EAGC,WACE,kBAAOI,KAAK,OAAOC,SAXF,SAAAH,GACnBD,EAAWC,EAAMI,cAAcC,MAAMC,cACtC,EAS8CD,MAAOP,KAClD,mBAAQI,KAAK,SAAb,sBAGL,ECsBD,EAnCe,WAAO,IAAD,EACnB,GAA0BL,EAAAA,EAAAA,UAAS,IAAnC,eAAOU,EAAP,KAAcC,EAAd,KACA,GAAkCX,EAAAA,EAAAA,WAAS,GAA3C,eAAOY,EAAP,KAAkBC,EAAlB,KACA,GAAsCb,EAAAA,EAAAA,UAAS,IAA/C,eAAOc,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAM,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE5CC,EAAAA,EAAAA,YAAU,WACO,KAAXF,IAGJN,GAAa,IACbS,EAAAA,EAAAA,IAAiBH,GACdI,MAAK,SAAAC,GACJT,EAAeS,EAASC,KAAKC,QAC9B,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQlB,GAAa,IACzB,GAAE,CAACH,EAAOS,IASX,OACE,2BACGP,IAAa,SAACoB,EAAA,EAAD,KACd,SAAC,EAAD,CAAajC,SAXK,SAAAW,GACpBQ,EAAgB,CAAER,MAAAA,IAClBmB,QAAQC,IAAIpB,GACZC,EAASD,EACV,KAQG,SAACuB,EAAA,EAAD,CAAWrD,OAAQkC,MAGxB,C,sKCvCKoB,EAAG,mCAEIC,EAAe,WAI1B,OAHiBC,EAAAA,EAAAA,IAAA,gEAC0CF,GAG5D,EACYZ,EAAmB,SAAAZ,GAI9B,OAHiB0B,EAAAA,EAAAA,IAAA,4DACsCF,EADtC,yBAC0DxB,GAG5E,EACY2B,EAAW,SAAAlD,GAItB,OAHiBiD,EAAAA,EAAAA,IAAA,6CACuBjD,EADvB,oBACqC+C,EADrC,mBAIlB,EACYI,EAAa,SAAAnD,GAIxB,OAHiBiD,EAAAA,EAAAA,IAAA,6CACuBjD,EADvB,4BAC6C+C,EAD7C,mBAIlB,EACYK,EAAc,SAAApD,GAGzB,OAFiBiD,EAAAA,EAAAA,IAAA,+CACkBjD,EADlB,4BACwC+C,EADxC,0BAGlB,C,sBChCc,SAASM,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHlC,MAAOoC,OAAOC,OAAOH,MAG3B,C","sources":["components/MovieList.jsx","components/Spinner.jsx","components/SearchInput.jsx","pages/Movies.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const NavItem = styled(NavLink)`\n    display: flex;\n    flex-direction: column;\n    color: black;\n    text-decoration: none;\n    :hover,\n    :focus {\n      color: blue;\n    }\n  `;\n\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <NavItem to={`/movies/${id}`} key={id} state={{ from: location }}>\n          {title}\n        </NavItem>\n      ))}\n    </ul>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};","import { Audio } from 'react-loader-spinner';\nconst Spinner = () => {\n  return (\n    <Audio\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      ariaLabel=\"audio-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"wrapper-class\"\n      visible={true}\n    />\n  );\n};\nexport default Spinner;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchInput = ({ onSubmit }) => {\n  const [formSub, setFormSub] = useState('');\n  const handleChange = event => {\n    setFormSub(event.currentTarget.value.toLowerCase());\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setFormSub('');\n    onSubmit(formSub);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" onChange={handleChange} value={formSub} />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\nexport default SearchInput;\n\nSearchInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { searchNameMovies } from '../services/api';\nimport { useSearchParams } from 'react-router-dom';\nimport Spinner from '../components/Spinner';\nimport MovieList from 'components/MovieList';\nimport SearchInput from '../components/SearchInput';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [listOfFilms, setListOfFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const filter = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (filter === '') {\n      return;\n    }\n    setIsLoading(true);\n    searchNameMovies(filter)\n      .then(response => {\n        setListOfFilms(response.data.results);\n      })\n      .catch(error => console.log(error))\n      .finally(setIsLoading(false));\n  }, [query, filter]);\n  const onSearchInput = query => {\n    setSearchParams({ query });\n    console.log(query);\n    setQuery(query);\n  };\n  //   const visibleFilms = listOfFilms.filter(film =>\n  //     film.name.toLowerCase().includes(filter.toLowerCase())\n  //   );\n  return (\n    <div>\n      {isLoading && <Spinner />}\n      <SearchInput onSubmit={onSearchInput} />\n      <MovieList movies={listOfFilms} />\n    </div>\n  );\n};\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = `6f3a72a470b06bab99f8d69f54b4e2d3`;\n\nexport const trendingList = () => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  return response;\n};\nexport const searchNameMovies = query => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&page=1&query=${query}`\n  );\n  return response;\n};\nexport const infoFilm = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\nexport const infoActors = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\nexport const reviewsFilm = id => {\n  const response = axios.get(`\nhttps://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n  return response;\n};\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["movies","NavItem","styled","NavLink","location","useLocation","map","id","title","to","state","from","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","onSubmit","useState","formSub","setFormSub","event","preventDefault","type","onChange","currentTarget","value","toLowerCase","query","setQuery","isLoading","setIsLoading","listOfFilms","setListOfFilms","useSearchParams","searchParams","setSearchParams","filter","get","useEffect","searchNameMovies","then","response","data","results","catch","error","console","log","finally","Spinner","MovieList","KEY","trendingList","axios","infoFilm","infoActors","reviewsFilm","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}