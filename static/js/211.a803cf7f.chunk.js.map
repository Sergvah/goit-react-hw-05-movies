{"version":3,"file":"static/js/211.a803cf7f.chunk.js","mappings":"2JAcA,IAbgB,WACd,OACE,SAAC,KAAD,CACEA,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,gBACVC,aAAc,CAAC,EACfC,aAAa,gBACbC,SAAS,GAGd,C,iKCZD,EAA+B,mCAA/B,EAAqF,uCAArF,EAAyI,iCAAzI,EAAiL,2BAAjL,EAA0N,kC,SCmH1N,EA3GqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,qfAsBPE,GAASF,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,0bAuBNG,GAAWC,EAAAA,EAAAA,OACjBC,EAAAA,EAAAA,YAAU,WACRP,GAAa,IACbQ,EAAAA,EAAAA,IAASd,GACNe,MAAK,SAAAC,GACJZ,EAASY,EAASC,KACnB,IACAC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,IACXG,QAAQhB,GAAa,GACzB,GAAE,CAACN,IAEJ,IAAMuB,EAAY,oBAAGZ,EAASa,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,QAC7C,GAAKtB,EAAL,CAGA,IAAQuB,EAAgEvB,EAAhEuB,eAAgBC,EAAgDxB,EAAhDwB,YAAaC,EAAmCzB,EAAnCyB,aAAcC,EAAqB1B,EAArB0B,SAAUC,EAAW3B,EAAX2B,OAC7D,OACE,iBAAKC,UAAWC,EAAhB,WACE,SAACtB,EAAD,CAAQuB,GAAIV,EAAZ,qBACClB,IAAa,SAAC6B,EAAA,EAAD,KACd,4BACE,gBACEH,UAAWC,EACXG,IACER,EAAW,0CAAsCA,GAAgBS,EAEnEC,IAAKX,KAEP,iBAAKK,UAAWC,EAAhB,WACE,wBAAKN,KACL,yCAAiBE,MACjB,sCACA,uBAAIC,KACJ,2BACE,mCACCC,EAAOQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACV,eAAaT,UAAWC,EAAxB,SACGQ,GADMD,EADC,cAQlB,iBAAKR,UAAWC,EAAhB,WACE,oDACA,SAACzB,EAAD,CAAS0B,GAAI,OAAQT,MAAO,CAAEC,KAAMF,GAApC,mBAGA,SAAChB,EAAD,CAAS0B,GAAI,UAAWT,MAAO,CAAEC,KAAMF,GAAvC,yBAIF,SAAC,EAAAkB,SAAD,CAAUC,UAAU,SAACR,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAvCL,CA2CF,C,sKCjHKS,EAAG,mCAEIC,EAAe,WAI1B,OAHiBC,EAAAA,EAAAA,IAAA,gEAC0CF,GAG5D,EACYG,EAAmB,SAAAC,GAI9B,OAHiBF,EAAAA,EAAAA,IAAA,4DACsCF,EADtC,yBAC0DI,GAG5E,EACYjC,EAAW,SAAAyB,GAItB,OAHiBM,EAAAA,EAAAA,IAAA,6CACuBN,EADvB,oBACqCI,EADrC,mBAIlB,EACYK,EAAa,SAAAT,GAIxB,OAHiBM,EAAAA,EAAAA,IAAA,6CACuBN,EADvB,4BAC6CI,EAD7C,mBAIlB,EACYM,EAAc,SAAAV,GAGzB,OAFiBM,EAAAA,EAAAA,IAAA,+CACkBN,EADlB,4BACwCI,EADxC,0BAGlB,C,8pJChCc,SAASO,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHK,MAAOH,OAAOC,OAAOH,MAG3B,C","sources":["components/Spinner.jsx","webpack://react-homework-template/./src/pages/MovieDetails/moviedetails.module.css?9636","pages/MovieDetails/MovieDetails.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { Audio } from 'react-loader-spinner';\nconst Spinner = () => {\n  return (\n    <Audio\n      height=\"100\"\n      width=\"100\"\n      color=\"#4fa94d\"\n      ariaLabel=\"audio-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"wrapper-class\"\n      visible={true}\n    />\n  );\n};\nexport default Spinner;\n","// extracted by mini-css-extract-plugin\nexport default {\"movie_search\":\"moviedetails_movie_search__dfok1\",\"img_movie_search\":\"moviedetails_img_movie_search__+UqKh\",\"info_block\":\"moviedetails_info_block__B25Ej\",\"addi\":\"moviedetails_addi__euvle\",\"list_actors\":\"moviedetails_list_actors__SR4U5\"};","import Spinner from 'components/Spinner';\nimport { useEffect } from 'react';\nimport { useState, Suspense } from 'react';\nimport { useParams, Outlet, NavLink, useLocation } from 'react-router-dom';\nimport { infoFilm } from '../../services/api';\nimport img from '../../services/default.png';\nimport styled from 'styled-components';\nimport css from '../MovieDetails/moviedetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const NavItem = styled(NavLink)`\n    color: white;\n    margin-right: 10px;\n    text-decoration: none;\n    background-color: dimgrey;\n    padding: 3px;\n    border-radius: 5px;\n    margin-bottom: 10px;\n    &.active {\n      color: black;\n      border-style: solid;\n      border-width: 1px;\n      border-color: inherit;\n    }\n    :hover:not(.active),\n    :focus-visible:not(.active) {\n      color: black;\n      border-style: solid;\n      border-width: 1px;\n      border-color: inherit;\n    }\n  `;\n  const GoBack = styled(NavLink)`\n    color: white;\n\n    text-decoration: none;\n    height: 18px;\n    width: 60px;\n    border-color: inherit;\n    border-style: solid;\n    border-width: 1px;\n    background: dimgrey;\n    border-radius: 5px;\n    cursor: pointer;\n    padding: 3px;\n    margin-top: 10px;\n    margin-left: 20px;\n    // text-aligh: center;\n\n    :hover,\n    :focus {\n      color: black;\n      border-color: black;\n    }\n  `;\n  const location = useLocation();\n  useEffect(() => {\n    setIsLoading(true);\n    infoFilm(movieId)\n      .then(response => {\n        setMovie(response.data);\n      })\n      .catch(error => console.log(error))\n      .finally(setIsLoading(false));\n  }, [movieId]);\n\n  const backLinkHref = location.state?.from ?? '/home';\n  if (!movie) {\n    return;\n  }\n  const { original_title, poster_path, vote_average, overview, genres } = movie;\n  return (\n    <div className={css.movie_search}>\n      <GoBack to={backLinkHref}>Go back</GoBack>\n      {isLoading && <Spinner />}\n      <div>\n        <img\n          className={css.img_movie_search}\n          src={\n            poster_path ? `https://image.tmdb.org/t/p/w300/${poster_path}` : img\n          }\n          alt={original_title}\n        />\n        <div className={css.info_block}>\n          <h2>{original_title}</h2>\n          <p>User score : {vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <ul>\n            <h3>Genres</h3>\n            {genres.map(({ id, name }) => (\n              <li key={id} className={css.list_actors}>\n                {name}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <div className={css.addi}>\n        <h2>Additional Information</h2>\n        <NavItem to={'cast'} state={{ from: backLinkHref }}>\n          Cast\n        </NavItem>\n        <NavItem to={'reviews'} state={{ from: backLinkHref }}>\n          Reviews\n        </NavItem>\n      </div>\n      <Suspense fallback={<Spinner />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst KEY = `6f3a72a470b06bab99f8d69f54b4e2d3`;\n\nexport const trendingList = () => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${KEY}`\n  );\n  return response;\n};\nexport const searchNameMovies = query => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&page=1&query=${query}`\n  );\n  return response;\n};\nexport const infoFilm = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\nexport const infoActors = id => {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return response;\n};\nexport const reviewsFilm = id => {\n  const response = axios.get(`\nhttps://api.themoviedb.org/3/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`);\n  return response;\n};\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","NavItem","styled","NavLink","GoBack","location","useLocation","useEffect","infoFilm","then","response","data","catch","error","console","log","finally","backLinkHref","state","from","original_title","poster_path","vote_average","overview","genres","className","css","to","Spinner","src","img","alt","map","id","name","Suspense","fallback","KEY","trendingList","axios","searchNameMovies","query","infoActors","reviewsFilm","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}